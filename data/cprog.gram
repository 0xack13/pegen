start[mod_ty]: a=stmt* $ { Module(a, NULL, p->arena) }
stmt[stmt_ty]: compound_stmt | simple_stmt
compound_stmt[stmt_ty]: pass_stmt
simple_stmt[stmt_ty]: expr_stmt

pass_stmt[stmt_ty]: a='pass' NEWLINE { _Py_Pass(EXTRA(a, a)) }

expr_stmt[stmt_ty]: a=expr NEWLINE { _Py_Expr(a, EXTRA(a, a)) }

expr[expr_ty]: ( l=expr '+' r=term { _Py_BinOp(l, Add, r, EXTRA(l, r)) }
               | l=expr '-' r=term { _Py_BinOp(l, Sub, r, EXTRA(l, r)) }
               | term
               )
term[expr_ty]: ( l=term '*' r=factor { _Py_BinOp(l, Mult, r, EXTRA(l, r)) }
               | l=term '/' r=factor { _Py_BinOp(l, Div, r, EXTRA(l, r)) }
               | factor
               )
factor[expr_ty]: ('(' e=expr ')' { e }
                 | atom
                 )
atom[expr_ty]: ( NAME
               | NUMBER
               )
