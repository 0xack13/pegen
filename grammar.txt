# Simplified grammar for Python

start: statements ENDMARKER
statements: statement statements | statement
statement: assignment NEWLINE | expression NEWLINE | function_def | class_def | import_stmt NEWLINE
assignment: target '=' expression

import_stmt: 'import' NAME | 'from' NAME 'import' names
names: NAME ',' names | NAME

function_def: 'def' NAME '(' [parameters] ')' ':' body
parameters: kwargs | arg ',' parameters | arg ',' | arg
kwargs: kwarg ',' kwargs | kwarg ',' | kwarg
kwarg: NAME '=' expression | '**' NAME
arg: NAME | '*' NAME

class_def: 'class' NAME '(' names ')' ':' body | 'class' NAME ':' body

body: NEWLINE INDENT statements DEDENT

full_expression: NAME ':=' expression | expression
expression: term (('+' term | '-' term))*
term: factor (('*' factor | '/' factor))*
factor: primary ('.' NAME | '[' expression ']' | '(' [expressions] ')')*
primary: list | tuple | group | NAME | STRING | NUMBER
list: '[' [expressions] ']'
tuple: '(' [full_expression ',' [expressions]] ')'
group: '(' expression ')'
expressions: full_expression ',' expressions | full_expression ',' | full_expression

target: NAME  # TODO: foo.bar, foo[bar], foo(bar)
